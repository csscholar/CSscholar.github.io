import*as d3 from"https://cdn.jsdelivr.net/npm/d3@7/+esm";import{Dataset,Filter}from"./dataset.min.js";const NUMERIC_COLUMNS=["year","referenceCount","citationCount","influentialCitationCount","authors_selfCitations"],CITATION_COLUMN="citationCount",INITIAL_SORTED_COLUMN="hIndex",DISPLAY_COLUMNS=["hIndex","count",CITATION_COLUMN,"authors_selfCitations","selfCitationPercent","influentialCitationCount","coAuthors"],READABLE_COLUMN_NAME_MAP={Position:"Position",Name:"Name",citationCount:"Citations",influentialCitationCount:"Influential Citations",authors_selfCitations:"Self Citations",selfCitationPercent:"Median Self Citation %",coAuthors:"No. Co-Authors",count:"No. Papers",hIndex:"H-Index"},COLUMN_DESCRIPTIONS={hIndex:"At least h papers have at least h citations",count:"Total number of papers",citationCount:"Total number of citations (as reported by SemanticScholar)",authors_selfCitations:"Total number of self-citations (derived from SemanticScholar)",selfCitationPercent:"Median percentage of self-citations per-paper (derived from SemanticScholar)",influentialCitationCount:"Total number of influential citations (as reported by SemanticScholar https://www.semanticscholar.org/faq#influential-citations)",coAuthors:"Total number of unique Co-Authors"},COLUMN_AGG_FUNC={default:d3.sum,coAuthors:d3.count,selfCitationPercent:d3.median},COLUMN_RENDERER_MAP={selfCitationPercent:$.fn.dataTable.render.number(",",".",1,"")},IS_COLUMN_ORDERABLE={default:!0,Position:!1,Name:!1},INITIAL_VENUES=["SC","IPDPS","HPDC","ICS","PPoPP"];let dataset=null,datatable=null;function updateAuthorList(t=null){$("#load").show();var a,n,o=Array.from(DISPLAY_COLUMNS),t=dataset.getColumnsByAuthor(o,t),i=(console.log(t),[]);for([a,n]of Object.entries(t)){let t=0,e=0;CITATION_COLUMN in n&&(e=getHIndex(n[CITATION_COLUMN]));for(var[r,l]of Object.entries(n)){t=l.length;var s=r in COLUMN_AGG_FUNC?COLUMN_AGG_FUNC[r]:COLUMN_AGG_FUNC.default;n[r]=s(l)}n.count=t,n.hIndex=e;var c=[n.coAuthors=0,a];for(const d of o)c.push(n[d]);i.push(c)}t=["Position","Name"].concat(o);datatable?(datatable.clear(),datatable.rows.add(i),datatable.draw()):(datatable=$("#list-view__table").DataTable({data:i,columns:t.map(t=>getDataTableColumnSpec(t)),order:[[t.indexOf(INITIAL_SORTED_COLUMN),"desc"]],pageLength:25,rowCallback:function(t,e,a){var n=$(this).DataTable(),o=n.page.info();return"desc"===n.order()[0][1]?$("td:nth-child(1)",t).html(String(o.start+a+1)):$("td:nth-child(1)",t).html(String(o.recordsTotal-o.start-a)),t},drawCallback:function(){$("#load").hide()}}),addTooltipsToTableHeader())}function addTooltipsToTableHeader(){$("#list-view__table thead th").each(function(t){t=DISPLAY_COLUMNS[t-2];$(this).attr("title",COLUMN_DESCRIPTIONS[t])})}function getDataTableColumnSpec(t){var e={title:READABLE_COLUMN_NAME_MAP[t]};return t in COLUMN_RENDERER_MAP&&(e.render=COLUMN_RENDERER_MAP[t]),e.orderable=t in IS_COLUMN_ORDERABLE?IS_COLUMN_ORDERABLE[t]:IS_COLUMN_ORDERABLE.default,e}function getHIndex(e){e.sort(function(t,e){return e-t});let a=0;for(let t=0;t<e.length&&e[t]>=t+1;t++)a=t+1;return a}function initializeFilterUI(t,e){t.sort();var a=$("#years-filter-start"),n=$("#years-filter-end");for(const l of t)a.append($("<option>").val(l).text(l)),n.append($("<option>").val(l).text(l));var o=+t[t.length-1],i=(t.includes(o-10)?a.val(o-10):a.find("option:first").prop("selected",!0),n.find("option:last").prop("selected",!0),a.on("change",updateYears),n.on("change",updateYears),$("#venues-form-hpc"));for(const s of e){var r=$("<div>").addClass("form-check").append($("<input>").addClass("settings-checkbox").attr("type","checkbox").attr("id","venues__"+s).attr("name","venue").attr("value",s).addClass("form-check-input").prop("checked",INITIAL_VENUES.includes(s))).append($("<label>").attr("for","venues__"+s).addClass("form-check-label").text(s));i.append(r)}$("#venues-form input").on("change",function(){updateAuthorList(getFilter())}),$(".area-dropdown").on("click",function(){rotateCaret(this)})}function rotateCaret(t){$(t).find("i").toggleClass("fa-circle-chevron-right fa-circle-chevron-down")}function getAllSelectValues(t){let e=[];return $(t+" option").each(function(){e.push($(this).val())}),e}function getFilter(){const e=+$("#years-filter-start").find(":selected").val(),a=+$("#years-filter-end").find(":selected").val();var t=getAllSelectValues("#years-filter-start").map(t=>+t).filter(t=>t>=e&&t<=a);let n=[];return $("#venues-form input[type='checkbox']:checked").each(function(){n.push($(this).val())}),new Filter(t,n)}function updateYears(){const e=+$("#years-filter-start").find(":selected").val(),a=+$("#years-filter-end").find(":selected").val();e>a?(console.log(`Start year (${e}) cannot be later than end year (${a}).`),$("#years-filter-start").val(a).change()):($("#years-filter-start option").each(function(){var t=$(this);t.prop("disabled",+t.val()>a)}),$("#years-filter-end option").each(function(){var t=$(this);t.prop("disabled",+t.val()<e)}),updateAuthorList(getFilter()))}$(function(){$("#load").show(),d3.csv("/data/site-data.csv",function(t){for(const e of NUMERIC_COLUMNS)t[e]=+t[e];return t}).then(t=>{initializeFilterUI((dataset=new Dataset(t)).getUnique("year").filter(t=>0!=t),dataset.getUnique("venue_acronym_acronym")),updateAuthorList(getFilter())})});